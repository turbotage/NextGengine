#pragma once
#include "def.h"

#ifdef NDEBUG
#define LOGD(s)
#else
#define LOGD(s)															\
{																		\
	std::cout << "LOGD: " << s << "\" in " << __FILE__ << " at line " << __LINE__ << std::endl; \
}
#endif

/*  comment to undef */
#define USE_LOGI

#ifdef USE_LOGI
#define LOGI(s)															\
{																		\
	std::cout << "LOGI: " << s << std::endl;							\
}
#else
#define LOGI(s)
#endif

namespace ng {

	namespace debug {

		typedef enum NgResult {
			NG_SUCCESS = VK_SUCCESS,
			NG_NOT_READY = VK_NOT_READY,
			NG_TIMEOUT = VK_TIMEOUT,
			NG_EVENT_SET = VK_EVENT_SET,
			NG_EVENT_RESET = VK_EVENT_RESET,
			NG_INCOMPLETE = VK_INCOMPLETE,
			NG_ERROR_OUT_OF_HOST_MEMORY = VK_ERROR_OUT_OF_HOST_MEMORY,
			NG_ERROR_OUT_OF_DEVICE_MEMORY = VK_ERROR_OUT_OF_DEVICE_MEMORY,
			NG_ERROR_INITIALIZATION_FAILED = VK_ERROR_INITIALIZATION_FAILED,
			NG_ERROR_DEVICE_LOST = VK_ERROR_DEVICE_LOST,
			NG_ERROR_MEMORY_MAP_FAILED = VK_ERROR_MEMORY_MAP_FAILED,
			NG_ERROR_LAYER_NOT_PRESENT = VK_ERROR_LAYER_NOT_PRESENT,
			NG_ERROR_EXTENSION_NOT_PRESENT = VK_ERROR_EXTENSION_NOT_PRESENT,
			NG_ERROR_FEATURE_NOT_PRESENT = VK_ERROR_FEATURE_NOT_PRESENT,
			NG_ERROR_INCOMPATIBLE_DRIVER = VK_ERROR_INCOMPATIBLE_DRIVER,
			NG_ERROR_TOO_MANY_OBJECTS = VK_ERROR_TOO_MANY_OBJECTS,
			NG_ERROR_FORMAT_NOT_SUPPORTED = VK_ERROR_FORMAT_NOT_SUPPORTED,
			NG_ERROR_FRAGMENTED_POOL = VK_ERROR_FRAGMENTED_POOL,
			NG_ERROR_OUT_OF_POOL_MEMORY = VK_ERROR_OUT_OF_POOL_MEMORY,
			NG_ERROR_INVALID_EXTERNAL_HANDLE = VK_ERROR_INVALID_EXTERNAL_HANDLE,
			NG_ERROR_SURFACE_LOST_KHR = VK_ERROR_SURFACE_LOST_KHR,
			NG_ERROR_NATIVE_WINDOW_IN_USE_KHR = VK_ERROR_NATIVE_WINDOW_IN_USE_KHR,
			NG_SUBOPTIMAL_KHR = VK_SUBOPTIMAL_KHR,
			NG_ERROR_OUT_OF_DATE_KHR = VK_ERROR_OUT_OF_DATE_KHR,
			NG_ERROR_INCOMPATIBLE_DISPLAY_KHR = VK_ERROR_INCOMPATIBLE_DISPLAY_KHR,
			NG_ERROR_VALIDATION_FAILED_EXT = VK_ERROR_VALIDATION_FAILED_EXT,
			NG_ERROR_INVALID_SHADER_NV = VK_ERROR_INVALID_SHADER_NV,
			NG_ERROR_FRAGMENTATION_EXT = VK_ERROR_FRAGMENTATION_EXT,
			NG_ERROR_NOT_PERMITTED_EXT = VK_ERROR_NOT_PERMITTED_EXT,
			NG_ERROR_OUT_OF_POOL_MEMORY_KHR = VK_ERROR_OUT_OF_POOL_MEMORY_KHR,
			NG_ERROR_INVALID_EXTERNAL_HANDLE_KHR = VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR
		} NgResult;

		class Debug
		{
		public:
			Debug();
			~Debug();

		};

	}

}